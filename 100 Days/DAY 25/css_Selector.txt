// Chú ý về thêm class trong CSS:

Muốn dùng .X.active → phải JS gán active vào chính .X
Muốn dùng .active .X → chỉ cần JS gán active vào cha chứa .X


VD: Trong code của Day 25, có đoạn:

- CSS:

.active .mark-map {
  transform: perspective(600px) rotateY(90deg);
  opacity: 0;
}

.active .card {
  transform: perspective(600px) rotateY(0deg);
  opacity: 1;
}

=> 2 đoạn code trên chỉ được áp dụng khi cha của mark-map/card có chứa class active 

- JS:

const frame = document.querySelector(".frame");
const card = document.querySelector(".card");
const mark = document.querySelector(".mark-map");

card.addEventListener("click", () => {
  frame.classList.toggle("active");
  frame.classList.toggle("inactive");
});

mark.addEventListener("click", () => {
  frame.classList.toggle("active");
  frame.classList.toggle("inactive");
});


=> frame được thêm active khi click vào card hay mark-map

**TH1**

- Nhưng có chú ý sau, khi tôi đổi code thành:

.mark-map.active, .active .card => đúng

.active .mark-map, .active .card => đúng

=> Bởi vì trong hai trường hợp trên luôn có ít nhất một selector match được thực tế HTML:

Trường hợp 1: .mark-map.active, .active .card

.mark-map.active không match, nhưng .active .card match → card vẫn hiện

Trường hợp 2: .active .mark-map, .active .card

.active .mark-map match (mark-map trong frame.active), .active .card match → mọi thứ đúng

→ Bạn thấy “đúng” vì hiệu ứng vẫn chạy nhờ cái selector còn lại.


**TH2**

.mark-map.active, .card.active => sai

.active .mark-map, .card.active => sai

=> Cả hai selector liên quan đến card.active đều không match (card không có active) → card không hiện.
Khi đó mark-map thì biến mất nhưng card không xuất hiện.
